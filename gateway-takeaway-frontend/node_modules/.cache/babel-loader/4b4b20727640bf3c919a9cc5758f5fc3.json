{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleks\\\\Documents\\\\GitHub\\\\frontend\\\\gateway-takeaway-frontend\\\\src\\\\components\\\\ManagerOrderPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styles from './ManagerOrderPage.module.css';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Constants from './Constants.json';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManagerOrderPage(props) {\n  _s();\n\n  let navigate = useNavigate();\n  const [ManagerOrderPageData, setManagerOrderPageData] = useState([]);\n  const [orderStatusState, setOrderStatusState] = useState([]);\n  let decodedJwt = jwt.decode(props.userJwt);\n  console.log(decodedJwt);\n\n  const loadData = async () => {\n    try {\n      const results = await axios.get(Constants.API_ADDRESS + '/RestaurantJWT', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + props.userJwt\n        }\n      });\n      setManagerOrderPageData(results.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleButtonReceived = async event => {\n    event.preventDefault();\n    setOrderStatusState(\"unreceived\");\n\n    try {\n      const result = await axios.post(Constants.API_ADDRESS + '/orderReceivedJWT', {\n        order_status: 'received'\n      });\n      console.log(result);\n      setOrderStatusState(\"received\");\n      setTimeout(() => {\n        setOrderStatusState(\"idle\");\n        navigate(\"/home\", {\n          replace: true\n        });\n      }, 1500);\n    } catch (error) {\n      console.error(error);\n      setOrderStatusState(\"error\");\n      setTimeout(() => setOrderStatusState(\"idle\"), 1500);\n    }\n  };\n\n  const handleButtonPreparing = async event => {\n    event.preventDefault();\n    setOrderStatusState(\"unreceived\");\n\n    try {\n      const result = await axios.post(Constants.API_ADDRESS + '/orderPreparingJWT', {\n        order_status: 'preparing'\n      });\n      console.log(result);\n      setOrderStatusState(\"received\");\n      setTimeout(() => {\n        setOrderStatusState(\"idle\");\n        navigate(\"/home\", {\n          replace: true\n        });\n      }, 1500);\n    } catch (error) {\n      console.error(error);\n      setOrderStatusState(\"error\");\n      setTimeout(() => setOrderStatusState(\"idle\"), 1500);\n    }\n  };\n\n  const handleButtonRFD = async event => {\n    event.preventDefault();\n    setOrderStatusState(\"unreceived\");\n\n    try {\n      const result = await axios.post(Constants.API_ADDRESS + '/orderRFDJWT', {\n        order_status: 'rfd'\n      });\n      console.log(result);\n      setOrderStatusState(\"received\");\n      setTimeout(() => {\n        setOrderStatusState(\"idle\");\n        navigate(\"/home\", {\n          replace: true\n        });\n      }, 1500);\n    } catch (error) {\n      console.error(error);\n      setOrderStatusState(\"error\");\n      setTimeout(() => setOrderStatusState(\"idle\"), 1500);\n    }\n  };\n\n  const handleButtonDelivering = async event => {\n    event.preventDefault();\n    setOrderStatusState(\"unreceived\");\n\n    try {\n      const result = await axios.post(Constants.API_ADDRESS + '/orderDeliveringJWT', {\n        order_status: 'delivering'\n      });\n      console.log(result);\n      setOrderStatusState(\"received\");\n      setTimeout(() => {\n        setOrderStatusState(\"idle\");\n        navigate(\"/home\", {\n          replace: true\n        });\n      }, 1500);\n    } catch (error) {\n      console.error(error);\n      setOrderStatusState(\"error\");\n      setTimeout(() => setOrderStatusState(\"idle\"), 1500);\n    }\n  };\n\n  const handleButtonDelivered = async event => {\n    event.preventDefault();\n    setOrderStatusState(\"unreceived\");\n\n    try {\n      const result = await axios.post(Constants.API_ADDRESS + '/orderDeliveredJWT', {\n        order_status: 'delivered'\n      });\n      console.log(result);\n      setOrderStatusState(\"received\");\n      setTimeout(() => {\n        setOrderStatusState(\"idle\");\n        navigate(\"/home\", {\n          replace: true\n        });\n      }, 1500);\n    } catch (error) {\n      console.error(error);\n      setOrderStatusState(\"error\");\n      setTimeout(() => setOrderStatusState(\"idle\"), 1500);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadData,\n      children: \"Load data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), ManagerOrderPageData.map(mo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.styles.titleText,\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderStatusText,\n        children: [\"Current order status: \", mo.order.order_status, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.titleText,\n        children: \"Manager order page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderStatusText,\n        children: \"Current user orders:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonReceived,\n          className: styles.buttonStyleReceived,\n          children: \"Received\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonPreparing,\n          className: styles.buttonStylePreparing,\n          children: \"Preparing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonRFD,\n          className: styles.buttonStyleRFD,\n          children: \"Ready for delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonDelivering,\n          className: styles.buttonStyleDelivering,\n          children: \"Delivering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleButtonDelivered,\n          className: styles.buttonStyleDelivered,\n          children: \"Delivered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderHistoryText,\n        children: \"Order history:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.restaurantName,\n          children: \"Example restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.buttonStyle,\n          children: \"Confirm received order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.statusText,\n          children: \"Example status text lorem ipsum datum el macaron\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderHistoryContainer1,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.restaurantName,\n          children: \"Example restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.orderHistoryContainer2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.restaurantName,\n          children: \"Example restaurant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ManagerOrderPage, \"RrGpXk2tjBcCOMImiMwQuAJ74Zs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ManagerOrderPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManagerOrderPage\");","map":{"version":3,"sources":["C:/Users/aleks/Documents/GitHub/frontend/gateway-takeaway-frontend/src/components/ManagerOrderPage.js"],"names":["React","useState","styles","axios","Link","useNavigate","Constants","jwt","ManagerOrderPage","props","navigate","ManagerOrderPageData","setManagerOrderPageData","orderStatusState","setOrderStatusState","decodedJwt","decode","userJwt","console","log","loadData","results","get","API_ADDRESS","headers","data","error","handleButtonReceived","event","preventDefault","result","post","order_status","setTimeout","replace","handleButtonPreparing","handleButtonRFD","handleButtonDelivering","handleButtonDelivered","map","mo","titleText","orderStatusText","order","buttonContainer","buttonStyleReceived","buttonStylePreparing","buttonStyleRFD","buttonStyleDelivering","buttonStyleDelivered","orderHistoryText","orderContainer","restaurantName","buttonStyle","statusText","orderHistoryContainer1","orderHistoryContainer2"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './ManagerOrderPage.module.css';\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Constants from './Constants.json';\r\nimport jwt from 'jsonwebtoken';\r\n\r\nexport default function ManagerOrderPage(props) {\r\n\r\n    let navigate = useNavigate();\r\n\r\n    const [ManagerOrderPageData, setManagerOrderPageData] = useState([]);\r\n    const [ orderStatusState, setOrderStatusState ] = useState([]);\r\n\r\n    let decodedJwt = jwt.decode(props.userJwt);\r\n    console.log(decodedJwt);\r\n\r\n    const loadData = async () => {\r\n        try {\r\n            const results = await axios.get(Constants.API_ADDRESS + '/RestaurantJWT', {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + props.userJwt\r\n                }\r\n            });\r\n            setManagerOrderPageData(results.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const handleButtonReceived = async (event) => {\r\n        event.preventDefault();\r\n        setOrderStatusState(\"unreceived\");\r\n        try {\r\n            const result = await axios.post(Constants.API_ADDRESS + '/orderReceivedJWT', {\r\n                order_status: 'received'\r\n            })\r\n            console.log(result);\r\n            setOrderStatusState(\"received\");\r\n            setTimeout(() => {\r\n                setOrderStatusState(\"idle\")\r\n                navigate(\"/home\", { replace: true });\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setOrderStatusState(\"error\");\r\n            setTimeout(() => setOrderStatusState(\"idle\"), 1500);\r\n        }\r\n    };\r\n\r\n    const handleButtonPreparing = async (event) => {\r\n        event.preventDefault();\r\n        setOrderStatusState(\"unreceived\");\r\n        try {\r\n            const result = await axios.post(Constants.API_ADDRESS + '/orderPreparingJWT', {\r\n                order_status: 'preparing'\r\n            })\r\n            console.log(result);\r\n            setOrderStatusState(\"received\");\r\n            setTimeout(() => {\r\n                setOrderStatusState(\"idle\")\r\n                navigate(\"/home\", { replace: true });\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setOrderStatusState(\"error\");\r\n            setTimeout(() => setOrderStatusState(\"idle\"), 1500);\r\n        }\r\n    };\r\n\r\n    const handleButtonRFD = async (event) => {\r\n        event.preventDefault();\r\n        setOrderStatusState(\"unreceived\");\r\n        try {\r\n            const result = await axios.post(Constants.API_ADDRESS + '/orderRFDJWT', {\r\n                order_status: 'rfd'\r\n            })\r\n            console.log(result);\r\n            setOrderStatusState(\"received\");\r\n            setTimeout(() => {\r\n                setOrderStatusState(\"idle\")\r\n                navigate(\"/home\", { replace: true });\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setOrderStatusState(\"error\");\r\n            setTimeout(() => setOrderStatusState(\"idle\"), 1500);\r\n        }\r\n    };\r\n\r\n    const handleButtonDelivering = async (event) => {\r\n        event.preventDefault();\r\n        setOrderStatusState(\"unreceived\");\r\n        try {\r\n            const result = await axios.post(Constants.API_ADDRESS + '/orderDeliveringJWT', {\r\n                order_status: 'delivering'\r\n            })\r\n            console.log(result);\r\n            setOrderStatusState(\"received\");\r\n            setTimeout(() => {\r\n                setOrderStatusState(\"idle\")\r\n                navigate(\"/home\", { replace: true });\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setOrderStatusState(\"error\");\r\n            setTimeout(() => setOrderStatusState(\"idle\"), 1500);\r\n        }\r\n    };\r\n\r\n    const handleButtonDelivered = async (event) => {\r\n        event.preventDefault();\r\n        setOrderStatusState(\"unreceived\");\r\n        try {\r\n            const result = await axios.post(Constants.API_ADDRESS + '/orderDeliveredJWT', {\r\n                order_status: 'delivered'\r\n            })\r\n            console.log(result);\r\n            setOrderStatusState(\"received\");\r\n            setTimeout(() => {\r\n                setOrderStatusState(\"idle\")\r\n                navigate(\"/home\", { replace: true });\r\n            }, 1500);\r\n        } catch (error) {\r\n            console.error(error);\r\n            setOrderStatusState(\"error\");\r\n            setTimeout(() => setOrderStatusState(\"idle\"), 1500);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={ loadData }>Load data</button>\r\n            { ManagerOrderPageData.map(mo => \r\n                <div>\r\n                    <div className={ styles.styles.titleText }>Orders</div>\r\n                    <div className={ styles.orderStatusText }>Current order status: { mo.order.order_status } </div>\r\n                    <div className={ styles.titleText }>\r\n                        Manager order page\r\n                    </div>\r\n                    <div className={ styles.orderStatusText }>\r\n                        Current user orders:\r\n                    </div>\r\n                    <div className={ styles.buttonContainer }>\r\n                        <button onClick={ handleButtonReceived } className={ styles.buttonStyleReceived }>Received</button>\r\n                        <button onClick={ handleButtonPreparing } className={ styles.buttonStylePreparing }>Preparing</button>\r\n                        <button onClick={ handleButtonRFD } className={ styles.buttonStyleRFD}>Ready for delivery</button>\r\n                        <button onClick={ handleButtonDelivering } className={ styles.buttonStyleDelivering }>Delivering</button>\r\n                        <button onClick={ handleButtonDelivered } className={ styles.buttonStyleDelivered }>Delivered</button>\r\n                    </div>\r\n                    <div className={ styles.orderHistoryText }>\r\n                        Order history:\r\n                    </div>\r\n                    <div className={ styles.orderContainer }>\r\n                        <div className={ styles.restaurantName }>Example restaurant</div>\r\n                            <button className={ styles.buttonStyle }>Confirm received order</button>\r\n                        <div className={ styles.statusText }>Example status text lorem ipsum datum el macaron</div>\r\n                    </div>\r\n                    <div className={ styles.orderHistoryContainer1 }>\r\n                        <div className={ styles.restaurantName }>Example restaurant</div>\r\n                    </div>\r\n                    <div className={ styles.orderHistoryContainer2 }>\r\n                        <div className={ styles.restaurantName }>Example restaurant</div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}